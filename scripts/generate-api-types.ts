#!/usr/bin/env node

// OpenAPI tip üretim script'i
// Bu script docs/openapi.yaml dosyasından TypeScript tiplerini üretir

import { execSync } from 'child_process';
import { readFileSync, writeFileSync, existsSync } from 'fs';
import { join } from 'path';

const openApiPath = join(__dirname, '../docs/openapi.yaml');
const typesPath = join(__dirname, '../src/types/api-types.ts');

console.log('🔧 OpenAPI tip üretimi başlatılıyor...');

// OpenAPI dosyasının varlığını kontrol et
if (!existsSync(openApiPath)) {
  console.error('❌ OpenAPI dosyası bulunamadı:', openApiPath);
  console.log('📝 docs/openapi.yaml dosyasını oluşturun veya dosya yolunu güncelleyin.');
  process.exit(1);
}

try {
  // openapi-typescript ile tip üretimi
  console.log('📄 OpenAPI dosyası okunuyor...');
  const openApiContent = readFileSync(openApiPath, 'utf8');
  
  console.log('⚡ TypeScript tipleri üretiliyor...');
  execSync(`npx openapi-typescript ${openApiPath} -o ${typesPath}`, {
    stdio: 'inherit',
    cwd: process.cwd(),
  });

  console.log('✅ TypeScript tip üretimi tamamlandı!');
  console.log(`📁 Üretilen dosya: ${typesPath}`);
  
  // İmport ve export eklemeleri
  console.log('🔧 İmport/export eklemeleri yapılıyor...');
  const generatedContent = readFileSync(typesPath, 'utf8');
  
  // Path tipini import et
  const enhancedContent = `// Auto-generated from docs/openapi.yaml
// Do not edit this file directly

import type { PathsWithMethod } from 'openapi-typescript-helpers';

${generatedContent}

// API endpoint'leri için tip yardımcıları
export type ApiPaths = PathsWithMethod<typeof paths>;
export type ApiComponents = typeof paths['components'];
`;

  writeFileSync(typesPath, enhancedContent);
  
  console.log('✅ OpenAPI tip üretimi başarıyla tamamlandı!');
  console.log('🚀 Artık API endpoint'lerini kullanabilirsiniz.');
  
} catch (error) {
  console.error('❌ OpenAPI tip üretiminde hata oluştu:', error);
  console.log('🔧 openapi-typescript kurulu mu kontrol edin:');
  console.log('   npm install -D openapi-typescript');
  process.exit(1);
}