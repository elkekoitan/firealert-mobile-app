name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18.2.0'
  EXPO_USERNAME: ${{ secrets.EXPO_USERNAME }}
  EXPO_PASSWORD: ${{ secrets.EXPO_PASSWORD }}

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
    
    - name: Run type checking
      run: npm run type-check
    
    - name: Run linting
      run: npm run lint
    
    - name: Check docs links
      run: npm run docs:check
    
    - name: Run unit tests
      run: npm run test:unit || true
      env:
        CI: true
    
    - name: Run integration tests
      run: npm run test:integration || true
      env:
        CI: true
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  build:
    name: Build App
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
    
    - name: Install Expo CLI
      run: npm install -g @expo/cli
    
    - name: Login to Expo
      run: expo login -u ${{ env.EXPO_USERNAME }} -p ${{ env.EXPO_PASSWORD }}
      env:
        EXPO_CLI_PASSWORD: ${{ secrets.EXPO_PASSWORD }}
    
    - name: Build for development
      if: github.ref == 'refs/heads/develop'
      run: expo build:ios -d --no-wait
      env:
        EAS_BUILD_SECRET: ${{ secrets.EAS_BUILD_SECRET }}
    
    - name: Build for production
      if: github.ref == 'refs/heads/main'
      run: expo build:ios -p ios --no-wait
      env:
        EAS_BUILD_SECRET: ${{ secrets.EAS_BUILD_SECRET }}
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: build-artifacts
        path: |
          build/
          dist/
        retention-days: 30

  deploy:
    name: Deploy App
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-artifacts
        path: build/
    
    - name: Deploy to Expo
      run: expo publish --release-channel production
      env:
        EXPO_CLI_PASSWORD: ${{ secrets.EXPO_PASSWORD }}
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.run_number }}
        name: Release v${{ github.run_number }}
        body: |
          ## Changes in Release v${{ github.run_number }}
          
          This release includes:
          - Latest features and bug fixes
          - Performance improvements
          - Security updates
          
          ### Installation
          Update your app to get the latest version.
        draft: false
        prerelease: false
        files: build/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Run npm audit
      run: npm audit --audit-level moderate
      continue-on-error: true
    
    - name: Run security scan with CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
    
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/perform-analysis@v2
      with:
        category: security

  performance-test:
    name: Performance Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
    
    - name: Install Lighthouse CI
      run: npm install -g @lhci/cli@0.12.x
    
    - name: Run Lighthouse CI
      run: lhci autorun
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
